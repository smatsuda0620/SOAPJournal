default_platform(:ios)

platform :ios do
  # 依存関係のインストール用のレーン
  desc "Install dependencies"
  lane :install_dependencies do
    # 必要な依存関係があればインストールする処理
  end

  # ビルドとアーカイブ用のレーン
  desc "Build and archive the app"
  lane :build_and_archive do
    # プロビジョニングプロファイルとコード署名を設定
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "SOAPJournal.xcodeproj",
      team_id: ENV["TEAM_ID"],
      code_sign_identity: "iPhone Distribution",
      profile_uuid: ENV["PROVISIONING_PROFILE_UUID"],
      profile_name: ENV["PROVISIONING_PROFILE_NAME"],
      bundle_identifier: "com.yourcompany.SOAPJournal" # アプリのバンドルIDに置き換えてください
    )

    # iOSアプリをビルドしてアーカイブ
    build_app(
      scheme: "SOAPJournal",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.yourcompany.SOAPJournal" => ENV["PROVISIONING_PROFILE_NAME"]
        }
      },
      skip_profile_detection: true,
      output_directory: "./build",
      archive_path: "./build/SOAPJournal.xcarchive"
    )
  end

  # TestFlightへのアップロード用のレーン
  desc "Upload to TestFlight"
  lane :beta do
    # App Store Connectの認証
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      in_house: false # Enterpriseアカウントの場合はtrueに設定
    )

    # アプリをビルドしてアーカイブ
    build_and_archive

    # TestFlightにアップロード
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: ENV["APPLE_APP_ID"] # App Store Connectで取得したApple IDに置き換えてください
    )
  end
end